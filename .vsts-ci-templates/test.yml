parameters:
  suite_name_suffix: ''
  ctest_filter: ''
  artifact_name: ''

steps:
- task: DownloadPipelineArtifact@1
  inputs:
    artifactName: ${{ parameters.artifact_name }}
    targetPath: $(Build.SourcesDirectory)/build

- script: |
    tar -xaf artifact.tar.gz
  displayName: Uncompress build artifact
  workingDirectory: build

- script: |
    ./tests.sh -VV --timeout 240 --no-compress-output -T Test ${{ parameters.ctest_filter }}
  displayName: CTest
  workingDirectory: build

- script: 'xsltproc --stringparam suiteName "$(Agent.MachineName) ${{ parameters.suite_name_suffix }}" ../tests/infra/ctest_to_junit.xslt Testing/*/Test.xml > JUnit.xml'
  displayName: XSLT
  workingDirectory: build
  condition: succeededOrFailed()

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/JUnit.xml'
    publishRunAttachments: true
  condition: succeededOrFailed()