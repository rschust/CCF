- hosts: all
  vars:
    workspace: "/tmp/"
    oe_ver: "0.5.2"
    oe_src: "oe-{{ oe_ver }}.tar.gz"
    oe_prefix: "/opt/openenclave"
    everest_ver: "mbedtls-snapshot-7"
    everest_src: "{{ everest_ver }}.tar.gz"
    headers:
      - endian.h
      - stdbool.h
      - inttypes.h

  tasks:

  - name: Download OpenEnclave source
    get_url:
      url: https://github.com/openenclave/openenclave/tarball/489404f2bdfdd3e07e0f150937151ae78392e8ed
      dest: "{{ workspace }}/{{ oe_src }}"
      force: yes
    become: true

  - name: Download mbedtls-everest
    get_url:
      url: https://github.com/project-everest/mbedtls/archive/{{ everest_ver }}.tar.gz
      dest: "{{ workspace }}/{{ everest_src }}"
    become: true

  - name: Remove Pre-existing OpenEnclave source on the remote
    file:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}"
      state: absent

  - name: Create directory for OpenEnclave source
    file:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}"
      state: directory

  - name: Expand OpenEnclave
    unarchive:
      src: "{{ workspace }}/{{ oe_src }}"
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}"
      copy: no
      extra_opts: [--strip-components=1]
      creates: "{{ workspace }}/openenclave-{{ oe_ver }}/CMakeLists.txt"

  - name: Modify libc headers
    template:
      src: "templates/{{ item }}"
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/include/openenclave/corelibc"
      mode: a+r
    with_list: "{{ headers }}"

# OpenEnclave turns on the Clang speculative load hardening pass by default.
# This is good practice for arbitrary enclaved code, as it applies a general
# mitigation that does not depend on source code annotation. However, being
# a general mitigation, it also carries about a 30% performance penalty when
# measured on various CCF benchmarks. To recover this performance, CCF
# disables the general mitigation and relies on audited code, targeting the
# specific vulnerable loads.

  - name: Disable Compiler-level Spectre mitigations
    replace:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}/cmake/compiler_settings.cmake"
      regexp: '-mllvm;-x86-speculative-load-hardening'
      replace: ''

  - name: Disable Compiler-level Spectre mitigations
    replace:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}/pkgconfig/CMakeLists.txt"
      regexp: '-mllvm -x86-speculative-load-hardening'
      replace: ''

  - name: Remove OE mbedtls
    file:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/mbedtls"
      state: absent

  - name: Expand mbedtls-everest
    unarchive:
      src: "{{ workspace }}/{{ everest_src }}"
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls"
      copy: no
      creates: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/mbedtls-{{ everest_ver }}/CMakeLists.txt"

  - name: Rename mbedtls-everest
    file:
      src: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/mbedtls-{{ everest_ver }}"
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/mbedtls"
      state: link

  - name: Enable Everest implementation
    blockinfile:
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/config.h"
      block: "{{ lookup('file', 'templates/mbedtls_config.h') }}"
      marker: "// {mark} Everest implementation flags"
      insertbefore: "#include \"check_config.h\""

  - name: Install everest headers
    lineinfile:
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/CMakeLists.txt"
      state: present
      line: 'install(DIRECTORY ${OE_INCDIR}/openenclave/everest DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty)'
      insertbefore: '^install\(DIRECTORY.*'

  - name: Copy everest headers, part I
    lineinfile:
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/CMakeLists.txt"
      state: present
      line: '  INSTALL_COMMAND ${CMAKE_COMMAND} -E copy_directory'
      regexp: '\s+INSTALL_COMMAND ""'

  - name: Copy everest headers, part II
    lineinfile:
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/CMakeLists.txt"
      state: present
      line: '    <SOURCE_DIR>/3rdparty/everest/include/everest ${OE_INCDIR}/openenclave/everest'
      insertafter: '^\s+INSTALL_COMMAND \.*'

  - name: Copy everest headers, part III
    lineinfile:
      dest: "{{ workspace }}/openenclave-{{ oe_ver }}/3rdparty/mbedtls/CMakeLists.txt"
      state: present
      line: '  $<BUILD_INTERFACE:${SOURCE_DIR}/3rdparty/everest/include>'
      insertafter: '^\s+\$\<BUILD_INTERFACE:\$\{SOURCE_DIR\}/include\>$'

  - name: Make OpenEnclave build dir
    file:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
      state: directory

  - name: Install OpenEnclave dependencies
    shell: |
      scripts/ansible/install-ansible.sh
      ansible-playbook "{{ oe_playbook }}"
    args:
      chdir: "{{ workspace }}/openenclave-{{ oe_ver }}"
    become: true
    async: 600
    poll: 5
    when: skip_dependencies is undefined

  - name: Install ninja
    apt:
      name: ninja-build
    become: true

  - name: Make OpenEnclave build dir
    file:
      path: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
      state: directory

  - name: Disable enclave mbedtls tests
    shell: truncate -s 0 tests.supported
    args:
      chdir: "{{ workspace }}/openenclave-{{ oe_ver }}/tests/mbed"
    become: true

  - name: Build OpenEnclave
    shell: |
      cmake -GNinja -DCMAKE_INSTALL_PREFIX:PATH={{ oe_prefix }} -DCMAKE_BUILD_TYPE=RelWithDebInfo {{ oe_build_opts }} ..
      ninja
    args:
      chdir: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
    async: 600
    poll: 5

  - name: Remove Pre-existing OpenEnclave install
    file:
      path: "{{ oe_prefix }}"
      state: absent
    become: true

  - name: Install OpenEnclave
    command: ninja install
    args:
      chdir: "{{ workspace }}/openenclave-{{ oe_ver }}/build"
    become: true
